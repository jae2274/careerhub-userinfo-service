// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.25.1
// source: careerhub/userinfo_service/restapi/restapi_grpc/scrapJob.proto

package restapi_grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ScrapJobServiceClient is the client API for ScrapJobService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ScrapJobServiceClient interface {
	GetScrapJobs(ctx context.Context, in *GetScrapJobsRequest, opts ...grpc.CallOption) (*GetScrapJobsResponse, error)
	AddScrapJob(ctx context.Context, in *AddScrapJobRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	RemoveScrapJob(ctx context.Context, in *RemoveScrapJobRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type scrapJobServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewScrapJobServiceClient(cc grpc.ClientConnInterface) ScrapJobServiceClient {
	return &scrapJobServiceClient{cc}
}

func (c *scrapJobServiceClient) GetScrapJobs(ctx context.Context, in *GetScrapJobsRequest, opts ...grpc.CallOption) (*GetScrapJobsResponse, error) {
	out := new(GetScrapJobsResponse)
	err := c.cc.Invoke(ctx, "/careerhub.userinfo_service.restapi_grpc.ScrapJobService/GetScrapJobs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scrapJobServiceClient) AddScrapJob(ctx context.Context, in *AddScrapJobRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/careerhub.userinfo_service.restapi_grpc.ScrapJobService/AddScrapJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scrapJobServiceClient) RemoveScrapJob(ctx context.Context, in *RemoveScrapJobRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/careerhub.userinfo_service.restapi_grpc.ScrapJobService/RemoveScrapJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScrapJobServiceServer is the server API for ScrapJobService service.
// All implementations must embed UnimplementedScrapJobServiceServer
// for forward compatibility
type ScrapJobServiceServer interface {
	GetScrapJobs(context.Context, *GetScrapJobsRequest) (*GetScrapJobsResponse, error)
	AddScrapJob(context.Context, *AddScrapJobRequest) (*emptypb.Empty, error)
	RemoveScrapJob(context.Context, *RemoveScrapJobRequest) (*emptypb.Empty, error)
	mustEmbedUnimplementedScrapJobServiceServer()
}

// UnimplementedScrapJobServiceServer must be embedded to have forward compatible implementations.
type UnimplementedScrapJobServiceServer struct {
}

func (UnimplementedScrapJobServiceServer) GetScrapJobs(context.Context, *GetScrapJobsRequest) (*GetScrapJobsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetScrapJobs not implemented")
}
func (UnimplementedScrapJobServiceServer) AddScrapJob(context.Context, *AddScrapJobRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddScrapJob not implemented")
}
func (UnimplementedScrapJobServiceServer) RemoveScrapJob(context.Context, *RemoveScrapJobRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveScrapJob not implemented")
}
func (UnimplementedScrapJobServiceServer) mustEmbedUnimplementedScrapJobServiceServer() {}

// UnsafeScrapJobServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ScrapJobServiceServer will
// result in compilation errors.
type UnsafeScrapJobServiceServer interface {
	mustEmbedUnimplementedScrapJobServiceServer()
}

func RegisterScrapJobServiceServer(s grpc.ServiceRegistrar, srv ScrapJobServiceServer) {
	s.RegisterService(&ScrapJobService_ServiceDesc, srv)
}

func _ScrapJobService_GetScrapJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetScrapJobsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScrapJobServiceServer).GetScrapJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/careerhub.userinfo_service.restapi_grpc.ScrapJobService/GetScrapJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScrapJobServiceServer).GetScrapJobs(ctx, req.(*GetScrapJobsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScrapJobService_AddScrapJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddScrapJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScrapJobServiceServer).AddScrapJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/careerhub.userinfo_service.restapi_grpc.ScrapJobService/AddScrapJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScrapJobServiceServer).AddScrapJob(ctx, req.(*AddScrapJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScrapJobService_RemoveScrapJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveScrapJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScrapJobServiceServer).RemoveScrapJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/careerhub.userinfo_service.restapi_grpc.ScrapJobService/RemoveScrapJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScrapJobServiceServer).RemoveScrapJob(ctx, req.(*RemoveScrapJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ScrapJobService_ServiceDesc is the grpc.ServiceDesc for ScrapJobService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ScrapJobService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "careerhub.userinfo_service.restapi_grpc.ScrapJobService",
	HandlerType: (*ScrapJobServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetScrapJobs",
			Handler:    _ScrapJobService_GetScrapJobs_Handler,
		},
		{
			MethodName: "AddScrapJob",
			Handler:    _ScrapJobService_AddScrapJob_Handler,
		},
		{
			MethodName: "RemoveScrapJob",
			Handler:    _ScrapJobService_RemoveScrapJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "careerhub/userinfo_service/restapi/restapi_grpc/scrapJob.proto",
}
