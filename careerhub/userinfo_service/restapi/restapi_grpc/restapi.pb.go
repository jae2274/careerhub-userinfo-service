// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: careerhub/userinfo_service/restapi/restapi_grpc/restapi.proto

package restapi_grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FindConditionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *FindConditionsRequest) Reset() {
	*x = FindConditionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindConditionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindConditionsRequest) ProtoMessage() {}

func (x *FindConditionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindConditionsRequest.ProtoReflect.Descriptor instead.
func (*FindConditionsRequest) Descriptor() ([]byte, []int) {
	return file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDescGZIP(), []int{0}
}

func (x *FindConditionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Conditions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conditions  []*Condition `protobuf:"bytes,1,rep,name=conditions,proto3" json:"conditions,omitempty"`
	AgreeToMail bool         `protobuf:"varint,2,opt,name=agreeToMail,proto3" json:"agreeToMail,omitempty"`
}

func (x *Conditions) Reset() {
	*x = Conditions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conditions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conditions) ProtoMessage() {}

func (x *Conditions) ProtoReflect() protoreflect.Message {
	mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conditions.ProtoReflect.Descriptor instead.
func (*Conditions) Descriptor() ([]byte, []int) {
	return file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDescGZIP(), []int{1}
}

func (x *Conditions) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *Conditions) GetAgreeToMail() bool {
	if x != nil {
		return x.AgreeToMail
	}
	return false
}

type Condition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConditionId   string `protobuf:"bytes,1,opt,name=conditionId,proto3" json:"conditionId,omitempty"`
	ConditionName string `protobuf:"bytes,2,opt,name=conditionName,proto3" json:"conditionName,omitempty"`
	Query         *Query `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *Condition) Reset() {
	*x = Condition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDescGZIP(), []int{2}
}

func (x *Condition) GetConditionId() string {
	if x != nil {
		return x.ConditionId
	}
	return ""
}

func (x *Condition) GetConditionName() string {
	if x != nil {
		return x.ConditionName
	}
	return ""
}

func (x *Condition) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Categories []*Category `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
	SkillNames []*Skill    `protobuf:"bytes,2,rep,name=skillNames,proto3" json:"skillNames,omitempty"`
	MinCareer  *int32      `protobuf:"varint,3,opt,name=minCareer,proto3,oneof" json:"minCareer,omitempty"`
	MaxCareer  *int32      `protobuf:"varint,4,opt,name=maxCareer,proto3,oneof" json:"maxCareer,omitempty"`
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDescGZIP(), []int{3}
}

func (x *Query) GetCategories() []*Category {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *Query) GetSkillNames() []*Skill {
	if x != nil {
		return x.SkillNames
	}
	return nil
}

func (x *Query) GetMinCareer() int32 {
	if x != nil && x.MinCareer != nil {
		return *x.MinCareer
	}
	return 0
}

func (x *Query) GetMaxCareer() int32 {
	if x != nil && x.MaxCareer != nil {
		return *x.MaxCareer
	}
	return 0
}

type Skill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Or []string `protobuf:"bytes,1,rep,name=Or,proto3" json:"Or,omitempty"`
}

func (x *Skill) Reset() {
	*x = Skill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Skill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Skill) ProtoMessage() {}

func (x *Skill) ProtoReflect() protoreflect.Message {
	mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Skill.ProtoReflect.Descriptor instead.
func (*Skill) Descriptor() ([]byte, []int) {
	return file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDescGZIP(), []int{4}
}

func (x *Skill) GetOr() []string {
	if x != nil {
		return x.Or
	}
	return nil
}

type Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Site         string `protobuf:"bytes,1,opt,name=site,proto3" json:"site,omitempty"`
	CategoryName string `protobuf:"bytes,2,opt,name=categoryName,proto3" json:"categoryName,omitempty"`
}

func (x *Category) Reset() {
	*x = Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDescGZIP(), []int{5}
}

func (x *Category) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *Category) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

type FindConditionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ConditionId string `protobuf:"bytes,2,opt,name=conditionId,proto3" json:"conditionId,omitempty"`
}

func (x *FindConditionRequest) Reset() {
	*x = FindConditionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindConditionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindConditionRequest) ProtoMessage() {}

func (x *FindConditionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindConditionRequest.ProtoReflect.Descriptor instead.
func (*FindConditionRequest) Descriptor() ([]byte, []int) {
	return file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDescGZIP(), []int{6}
}

func (x *FindConditionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FindConditionRequest) GetConditionId() string {
	if x != nil {
		return x.ConditionId
	}
	return ""
}

type AddConditionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string           `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Condition  *AddConditionReq `protobuf:"bytes,2,opt,name=condition,proto3" json:"condition,omitempty"`
	LimitCount uint32           `protobuf:"varint,3,opt,name=limitCount,proto3" json:"limitCount,omitempty"`
}

func (x *AddConditionRequest) Reset() {
	*x = AddConditionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddConditionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConditionRequest) ProtoMessage() {}

func (x *AddConditionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConditionRequest.ProtoReflect.Descriptor instead.
func (*AddConditionRequest) Descriptor() ([]byte, []int) {
	return file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDescGZIP(), []int{7}
}

func (x *AddConditionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddConditionRequest) GetCondition() *AddConditionReq {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *AddConditionRequest) GetLimitCount() uint32 {
	if x != nil {
		return x.LimitCount
	}
	return 0
}

type AddConditionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConditionName string `protobuf:"bytes,2,opt,name=conditionName,proto3" json:"conditionName,omitempty"`
	Query         *Query `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *AddConditionReq) Reset() {
	*x = AddConditionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddConditionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConditionReq) ProtoMessage() {}

func (x *AddConditionReq) ProtoReflect() protoreflect.Message {
	mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConditionReq.ProtoReflect.Descriptor instead.
func (*AddConditionReq) Descriptor() ([]byte, []int) {
	return file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDescGZIP(), []int{8}
}

func (x *AddConditionReq) GetConditionName() string {
	if x != nil {
		return x.ConditionName
	}
	return ""
}

func (x *AddConditionReq) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

type IsSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *IsSuccess) Reset() {
	*x = IsSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsSuccess) ProtoMessage() {}

func (x *IsSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsSuccess.ProtoReflect.Descriptor instead.
func (*IsSuccess) Descriptor() ([]byte, []int) {
	return file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDescGZIP(), []int{9}
}

func (x *IsSuccess) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type UpdateConditionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string     `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Condition *Condition `protobuf:"bytes,2,opt,name=condition,proto3" json:"condition,omitempty"`
}

func (x *UpdateConditionRequest) Reset() {
	*x = UpdateConditionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConditionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConditionRequest) ProtoMessage() {}

func (x *UpdateConditionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConditionRequest.ProtoReflect.Descriptor instead.
func (*UpdateConditionRequest) Descriptor() ([]byte, []int) {
	return file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateConditionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateConditionRequest) GetCondition() *Condition {
	if x != nil {
		return x.Condition
	}
	return nil
}

type DeleteConditionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ConditionId string `protobuf:"bytes,2,opt,name=conditionId,proto3" json:"conditionId,omitempty"`
}

func (x *DeleteConditionRequest) Reset() {
	*x = DeleteConditionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConditionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConditionRequest) ProtoMessage() {}

func (x *DeleteConditionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConditionRequest.ProtoReflect.Descriptor instead.
func (*DeleteConditionRequest) Descriptor() ([]byte, []int) {
	return file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteConditionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteConditionRequest) GetConditionId() string {
	if x != nil {
		return x.ConditionId
	}
	return ""
}

type UpdateAgreeToMailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	AgreeToMail bool   `protobuf:"varint,2,opt,name=agreeToMail,proto3" json:"agreeToMail,omitempty"`
}

func (x *UpdateAgreeToMailRequest) Reset() {
	*x = UpdateAgreeToMailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAgreeToMailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAgreeToMailRequest) ProtoMessage() {}

func (x *UpdateAgreeToMailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAgreeToMailRequest.ProtoReflect.Descriptor instead.
func (*UpdateAgreeToMailRequest) Descriptor() ([]byte, []int) {
	return file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateAgreeToMailRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateAgreeToMailRequest) GetAgreeToMail() bool {
	if x != nil {
		return x.AgreeToMail
	}
	return false
}

var File_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto protoreflect.FileDescriptor

var file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDesc = []byte{
	0x0a, 0x3d, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x68, 0x75, 0x62, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x27, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x68, 0x75, 0x62, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x61, 0x70, 0x69, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x22, 0x2f, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x0a, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x52, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63,
	0x61, 0x72, 0x65, 0x65, 0x72, 0x68, 0x75, 0x62, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x70,
	0x69, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x67, 0x72, 0x65, 0x65, 0x54, 0x6f, 0x4d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x61, 0x67, 0x72, 0x65, 0x65, 0x54, 0x6f, 0x4d, 0x61, 0x69, 0x6c, 0x22, 0x99,
	0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x68, 0x75, 0x62, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x8c, 0x02, 0x0a, 0x05, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x51, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x61, 0x72, 0x65, 0x65,
	0x72, 0x68, 0x75, 0x62, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x61,
	0x72, 0x65, 0x65, 0x72, 0x68, 0x75, 0x62, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69,
	0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x0a, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x43, 0x61,
	0x72, 0x65, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x09, 0x6d, 0x69,
	0x6e, 0x43, 0x61, 0x72, 0x65, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6d, 0x61,
	0x78, 0x43, 0x61, 0x72, 0x65, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52,
	0x09, 0x6d, 0x61, 0x78, 0x43, 0x61, 0x72, 0x65, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x6d, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x65, 0x65, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x6d, 0x61, 0x78, 0x43, 0x61, 0x72, 0x65, 0x65, 0x72, 0x22, 0x17, 0x0a, 0x05, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02,
	0x4f, 0x72, 0x22, 0x42, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69,
	0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xa5, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x64,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x56, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x61,
	0x72, 0x65, 0x65, 0x72, 0x68, 0x75, 0x62, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69,
	0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x7d, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x61, 0x72, 0x65, 0x65,
	0x72, 0x68, 0x75, 0x62, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22,
	0x21, 0x0a, 0x09, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x61, 0x72, 0x65, 0x65,
	0x72, 0x68, 0x75, 0x62, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x18, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x72, 0x65, 0x65, 0x54, 0x6f, 0x4d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x67, 0x72, 0x65, 0x65, 0x54, 0x6f, 0x4d, 0x61, 0x69, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x67, 0x72, 0x65, 0x65, 0x54, 0x6f, 0x4d, 0x61, 0x69,
	0x6c, 0x32, 0xb7, 0x05, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x74, 0x41, 0x70, 0x69, 0x47, 0x72, 0x70,
	0x63, 0x12, 0x85, 0x01, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3e, 0x2e, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x68, 0x75, 0x62,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x68, 0x75, 0x62,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x80, 0x01, 0x0a, 0x0c, 0x41, 0x64,
	0x64, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x2e, 0x63, 0x61, 0x72,
	0x65, 0x65, 0x72, 0x68, 0x75, 0x62, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x61, 0x72, 0x65, 0x65,
	0x72, 0x68, 0x75, 0x62, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x86, 0x01, 0x0a,
	0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3f, 0x2e, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x68, 0x75, 0x62, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x65,
	0x73, 0x74, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x68, 0x75, 0x62, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x73, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x86, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x2e, 0x63, 0x61, 0x72, 0x65,
	0x65, 0x72, 0x68, 0x75, 0x62, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x61, 0x72,
	0x65, 0x65, 0x72, 0x68, 0x75, 0x62, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x8a,
	0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x72, 0x65, 0x65, 0x54, 0x6f,
	0x4d, 0x61, 0x69, 0x6c, 0x12, 0x41, 0x2e, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x68, 0x75, 0x62,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x72, 0x65, 0x65, 0x54, 0x6f, 0x4d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72,
	0x68, 0x75, 0x62, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x29, 0x5a, 0x27, 0x63,
	0x61, 0x72, 0x65, 0x65, 0x72, 0x68, 0x75, 0x62, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x70,
	0x69, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDescOnce sync.Once
	file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDescData = file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDesc
)

func file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDescGZIP() []byte {
	file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDescOnce.Do(func() {
		file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDescData)
	})
	return file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDescData
}

var file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_goTypes = []interface{}{
	(*FindConditionsRequest)(nil),    // 0: careerhub.userinfo_service.restapi_grpc.FindConditionsRequest
	(*Conditions)(nil),               // 1: careerhub.userinfo_service.restapi_grpc.Conditions
	(*Condition)(nil),                // 2: careerhub.userinfo_service.restapi_grpc.Condition
	(*Query)(nil),                    // 3: careerhub.userinfo_service.restapi_grpc.Query
	(*Skill)(nil),                    // 4: careerhub.userinfo_service.restapi_grpc.Skill
	(*Category)(nil),                 // 5: careerhub.userinfo_service.restapi_grpc.Category
	(*FindConditionRequest)(nil),     // 6: careerhub.userinfo_service.restapi_grpc.FindConditionRequest
	(*AddConditionRequest)(nil),      // 7: careerhub.userinfo_service.restapi_grpc.AddConditionRequest
	(*AddConditionReq)(nil),          // 8: careerhub.userinfo_service.restapi_grpc.AddConditionReq
	(*IsSuccess)(nil),                // 9: careerhub.userinfo_service.restapi_grpc.IsSuccess
	(*UpdateConditionRequest)(nil),   // 10: careerhub.userinfo_service.restapi_grpc.UpdateConditionRequest
	(*DeleteConditionRequest)(nil),   // 11: careerhub.userinfo_service.restapi_grpc.DeleteConditionRequest
	(*UpdateAgreeToMailRequest)(nil), // 12: careerhub.userinfo_service.restapi_grpc.UpdateAgreeToMailRequest
}
var file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_depIdxs = []int32{
	2,  // 0: careerhub.userinfo_service.restapi_grpc.Conditions.conditions:type_name -> careerhub.userinfo_service.restapi_grpc.Condition
	3,  // 1: careerhub.userinfo_service.restapi_grpc.Condition.query:type_name -> careerhub.userinfo_service.restapi_grpc.Query
	5,  // 2: careerhub.userinfo_service.restapi_grpc.Query.categories:type_name -> careerhub.userinfo_service.restapi_grpc.Category
	4,  // 3: careerhub.userinfo_service.restapi_grpc.Query.skillNames:type_name -> careerhub.userinfo_service.restapi_grpc.Skill
	8,  // 4: careerhub.userinfo_service.restapi_grpc.AddConditionRequest.condition:type_name -> careerhub.userinfo_service.restapi_grpc.AddConditionReq
	3,  // 5: careerhub.userinfo_service.restapi_grpc.AddConditionReq.query:type_name -> careerhub.userinfo_service.restapi_grpc.Query
	2,  // 6: careerhub.userinfo_service.restapi_grpc.UpdateConditionRequest.condition:type_name -> careerhub.userinfo_service.restapi_grpc.Condition
	0,  // 7: careerhub.userinfo_service.restapi_grpc.RestApiGrpc.FindConditions:input_type -> careerhub.userinfo_service.restapi_grpc.FindConditionsRequest
	7,  // 8: careerhub.userinfo_service.restapi_grpc.RestApiGrpc.AddCondition:input_type -> careerhub.userinfo_service.restapi_grpc.AddConditionRequest
	10, // 9: careerhub.userinfo_service.restapi_grpc.RestApiGrpc.UpdateCondition:input_type -> careerhub.userinfo_service.restapi_grpc.UpdateConditionRequest
	11, // 10: careerhub.userinfo_service.restapi_grpc.RestApiGrpc.DeleteCondition:input_type -> careerhub.userinfo_service.restapi_grpc.DeleteConditionRequest
	12, // 11: careerhub.userinfo_service.restapi_grpc.RestApiGrpc.UpdateAgreeToMail:input_type -> careerhub.userinfo_service.restapi_grpc.UpdateAgreeToMailRequest
	1,  // 12: careerhub.userinfo_service.restapi_grpc.RestApiGrpc.FindConditions:output_type -> careerhub.userinfo_service.restapi_grpc.Conditions
	9,  // 13: careerhub.userinfo_service.restapi_grpc.RestApiGrpc.AddCondition:output_type -> careerhub.userinfo_service.restapi_grpc.IsSuccess
	9,  // 14: careerhub.userinfo_service.restapi_grpc.RestApiGrpc.UpdateCondition:output_type -> careerhub.userinfo_service.restapi_grpc.IsSuccess
	9,  // 15: careerhub.userinfo_service.restapi_grpc.RestApiGrpc.DeleteCondition:output_type -> careerhub.userinfo_service.restapi_grpc.IsSuccess
	9,  // 16: careerhub.userinfo_service.restapi_grpc.RestApiGrpc.UpdateAgreeToMail:output_type -> careerhub.userinfo_service.restapi_grpc.IsSuccess
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_init() }
func file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_init() {
	if File_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindConditionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conditions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Condition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Skill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindConditionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddConditionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddConditionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConditionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConditionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAgreeToMailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_goTypes,
		DependencyIndexes: file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_depIdxs,
		MessageInfos:      file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_msgTypes,
	}.Build()
	File_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto = out.File
	file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_rawDesc = nil
	file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_goTypes = nil
	file_careerhub_userinfo_service_restapi_restapi_grpc_restapi_proto_depIdxs = nil
}
